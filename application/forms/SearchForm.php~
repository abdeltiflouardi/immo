<?php

/**
 *
 * 
 * @author 
 * @version
 */
class SearchForm extends Zend_Dojo_Form
{
    /**
     * Décorateur par défaut
     * @var array
     */

    protected $_defaultDecorator = array(
        array('DijitElement'),
        array('Description', array('tag' => 'span', 'class' => 'description')),
        array('Errors'),
        array('Label', array('requiredSuffix' => ' <span class="required">*</span>', 'escape' => false)),
        array('HtmlTag', array('tag' => 'li', 'class' => 'row')),
    );
    
    /**
     * Décorateur flottant à gauche (largeur 50 %)
     * @var array
     */
    protected $_floatLeftDecorator = array(
        array('DijitElement'),
        array('Errors'),
        array('Description'),
        array('Label', array('requiredSuffix' => ' <span class="required">*</span>', 'escape' => false)),
        array('HtmlTag', array('tag' => 'li', 'class' => 'row left')),
    );
    
    /**
     * Décorateur flottant à droite (largeur 50 %)
     * @var array
     */
    protected $_floatRightDecorator = array(
        array('DijitElement'),
        array('Errors'),
        array('Description'),
        array('Label', array('requiredSuffix' => ' <span class="required">*</span>', 'escape' => false)),
        array('HtmlTag', array('tag' => 'li', 'class' => 'row right')),
    );
    
    /**
     * Décorateur avec label en style inline
     * (utile pour les cases à cocher)
     * @var array
     */
    protected $_inlineDecorator = array(
        array('DijitElement'),
        array('Errors'),
        array('Description'),
        array('Label', array('requiredSuffix' => ' <span class="required">*</span>', 'escape' => false)),
        array('HtmlTag', array('tag' => 'li', 'class' => 'row inline')),
    );
    
    /**
     * Décorateur sans label, spécifique au bouton submit du formulaire
     * @var array
     */
    protected $_submitDecorator = array(
        array('DijitElement'),
        array('HtmlTag', array('tag' => 'li', 'class' => 'row')),
    );
    
    public function init()
    {
	$listeType 	= TTypeBien::getListe();
	$listeCat 	= TCategoriesBien::getListe();

	$this->addElement(
			'ComboBox',
			'Categorie',
			array(
				'label'=>'Categorie',
				'multiOptions'=>$listeCat
			)
		);

	$this->addElement(
			'ComboBox',
			'TypeBien',
			array(
				'label'=>'TypeBien',
				'multiOptions'=>$listeType
			)
		);

	$this->addElement(
		'ComboBox',
		'PaysBien',
		array(
			'label'       => 'PaysBien',
			'required'=>true,
			'storeId'     => 'stateStore',
			'storeType'   => 'dojo.data.ItemFileReadStore',
			'storeParams' => array(
			'url' => '/public/js/countries.json',
			),
			'dijitParams' => array(
			'searchAttr' => 'name',
			),
		)
		);

	$this->addElement(
			'TextBox',
			'PrixD',
			array(
				'label'      => 'PrixD',
				'required'=>true,
				'trim'       => true,
				 'validators' =>array(
								array('EmailAddress'),
								array('NotEmpty', true)
							)
			)
			);

	$this->addElement(
			'TextBox',
			'PrixF',
			array(
				'label'      => 'PrixF',
				'required'=>true,
				'trim'       => true,
				 'validators' => array(
								array('EmailAddress'),
								array('NotEmpty', true)
							)
			)
			);



        $this->addElement('SubmitButton', 'submit', array(
            'label' => 'Rechercher'
        ));

        $this->clearDecorators();

        $this->addDecorator('FormElements')
             ->addDecorator('HtmlTag', array('tag' => '<ul>', 'class' => 'form'))
             ->addDecorator('DijitForm');

        $this->setElementDecorators($this->_defaultDecorator);

        $this->getElement('PrixD')->setDecorators($this->_floatLeftDecorator);
        $this->getElement('PrixF')->setDecorators($this->_floatRightDecorator);
        //$this->getElement('newsletter')->setDecorators($this->_inlineDecorator);
        $this->getElement('submit')->setDecorators($this->_submitDecorator);

        return $this;
    }
}


